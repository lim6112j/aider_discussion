version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: server-to-server-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - REDIS_URL=redis://redis:6379
      - MONGODB_URI=mongodb://mongodb:27017/server_to_server
      - LOG_LEVEL=info
      - SERVICE_A_URL=http://service-a:3000
      - SERVICE_B_URL=http://service-b:3000
    depends_on:
      - rabbitmq
      - redis
      - mongodb
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs

  rabbitmq:
    image: rabbitmq:3-management
    container_name: server-to-server-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - app-network

  redis:
    image: redis:6-alpine
    container_name: server-to-server-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  mongodb:
    image: mongo:4.4
    container_name: server-to-server-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - app-network

  # Example service A (for testing)
  service-a:
    build:
      context: ./services/service-a
      dockerfile: Dockerfile
    container_name: service-a
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - app-network

  # Example service B (for testing)
  service-b:
    build:
      context: ./services/service-b
      dockerfile: Dockerfile
    container_name: service-b
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  rabbitmq-data:
  redis-data:
  mongodb-data:
